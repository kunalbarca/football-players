{"ast":null,"code":"var _jsxFileName = \"/Users/kunal/Documents/learning/best-football-players/client/src/AutoCompleteText/AutoCompleteText.js\";\nimport React from 'react';\nimport \"./AutoCompleteText.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, 'i');\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.items = ['David', 'Sara', 'Sam', 'Jane'];\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/api/v1/footballers\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.suggestionSelected(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AutoCompleteText\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: this.onTextChanged,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.renderSuggestions()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kunal/Documents/learning/best-football-players/client/src/AutoCompleteText/AutoCompleteText.js"],"names":["React","AutoCompleteText","Component","constructor","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","state","callAPI","fetch","then","res","apiResponse","componentWillMount","suggestionSelected","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC1DC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAOA,KAAP;;AADgB,SAwBpBC,aAxBoB,GAwBHC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAED,CAAC,CAACE,MAAF,CAASD,KAAtB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAGF,KAAK,CAACG,MAAN,GAAe,CAAlB,EAAoB;AAChB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,KAAKI,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACH;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAET,QAAAA,WAAF;AAAeU,QAAAA,IAAI,EAAEZ;AAArB,OAAP,CAAd;AACH,KAhCmB;;AAEhB,SAAKM,KAAL,GAAa,CACT,OADS,EAET,MAFS,EAGT,KAHS,EAIT,MAJS,CAAb;AAMA,SAAKO,KAAL,GAAY;AACRX,MAAAA,WAAW,EAAG,EADN;AAERU,MAAAA,IAAI,EAAE;AAFE,KAAZ;AAIH;;AAEDE,EAAAA,OAAO,GAAG;AACRC,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACL,IAAJ,EADjB,EAEKI,IAFL,CAEUC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEO,MAAAA,WAAW,EAAED;AAAf,KAAd,CAFjB;AAGD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,SAAKL,OAAL;AACD;;AAYDM,EAAAA,kBAAkB,CAAEpB,KAAF,EAAS;AACvB,SAAKW,QAAL,CAAc,OAAO;AACjBC,MAAAA,IAAI,EAAEZ,KADW;AAEjBE,MAAAA,WAAW,EAAE;AAFI,KAAP,CAAd;AAIH;;AAEDmB,EAAAA,iBAAiB,GAAI;AACjB,UAAM;AAAEnB,MAAAA;AAAF,QAAkB,KAAKW,KAA7B;;AACA,QAAIX,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,aAAO,IAAP;AACH;;AACD,wBACI;AAAA,gBACKD,WAAW,CAACoB,GAAZ,CAAiBC,IAAD,iBAAU;AAAI,QAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA,kBAAmDA;AAAnD;AAAA;AAAA;AAAA;AAAA,cAA1B;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAO,QAAA,KAAK,EAAGD,IAAf;AAAsB,QAAA,QAAQ,EAAE,KAAKd,aAArC;AAAoD,QAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKuB,iBAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA9DyD","sourcesContent":["import React from 'react';\nimport \"./AutoCompleteText.css\";\n\nexport default class AutoCompleteText extends React.Component {\n    constructor (props) {\n        super (props);\n        this.items = [\n            'David',\n            'Sara',\n            'Sam',\n            'Jane'\n        ];\n        this.state ={\n            suggestions : [],\n            text: '',\n        };\n    }\n  \n    callAPI() {\n      fetch(\"http://localhost:9000/api/v1/footballers\")\n          .then(res => res.text())\n          .then(res => this.setState({ apiResponse: res }));\n    }\n    \n    componentWillMount() {\n      this.callAPI();\n    }\n\n    onTextChanged = (e) => {\n        const value =e.target.value;\n        let suggestions = [];\n        if(value.length > 0){\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        }\n        this.setState(() => ({ suggestions, text: value }));\n    }\n\n    suggestionSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: []\n        }));\n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state;\n        if( suggestions.length === 0 ){\n            return null;\n        }\n        return (\n            <ul>\n                {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    render() {\n        const { text } = this.state;\n        return (\n            <div className='AutoCompleteText'>\n                <input value={ text } onChange={this.onTextChanged} type=\"text\" />\n                {this.renderSuggestions()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}