{"ast":null,"code":"var _jsxFileName = \"/Users/kunal/Documents/learning/best-football-players/client/src/AutoCompleteText/AutoCompleteText.js\";\nimport React from 'react';\nimport \"./AutoCompleteText.css\";\nimport apiList from \"../lib/apiList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      this.callAPI(value);\n      const {\n        apiResponse\n      } = this.state;\n      console.log(apiResponse);\n      let suggestions = [];\n\n      if (value.length > 0) {\n        suggestions = apiResponse.data;\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: '',\n      apiResponse: []\n    };\n  }\n\n  async callAPI(value) {\n    await fetch(apiList.getFootballers).then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const {\n      apiResponse\n    } = this.state;\n\n    if (apiResponse.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: apiResponse.data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.suggestionSelected(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AutoCompleteText\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: this.onTextChanged,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), this.renderSuggestions()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kunal/Documents/learning/best-football-players/client/src/AutoCompleteText/AutoCompleteText.js"],"names":["React","apiList","AutoCompleteText","Component","constructor","props","onTextChanged","e","value","target","callAPI","apiResponse","state","console","log","suggestions","length","data","setState","text","fetch","getFootballers","then","res","suggestionSelected","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AAEA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC1DC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAOA,KAAP;;AADgB,SAepBC,aAfoB,GAeHC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,WAAKE,OAAL,CAAaF,KAAb;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,UAAII,WAAW,GAAG,EAAlB;;AACA,UAAGP,KAAK,CAACQ,MAAN,GAAe,CAAlB,EAAoB;AAChBD,QAAAA,WAAW,GAAGJ,WAAW,CAACM,IAA1B;AACH;;AACD,WAAKC,QAAL,CAAc,OAAO;AAAEH,QAAAA,WAAF;AAAeI,QAAAA,IAAI,EAAEX;AAArB,OAAP,CAAd;AACH,KAzBmB;;AAEhB,SAAKI,KAAL,GAAY;AACRG,MAAAA,WAAW,EAAG,EADN;AAERI,MAAAA,IAAI,EAAE,EAFE;AAGRR,MAAAA,WAAW,EAAE;AAHL,KAAZ;AAKH;;AAEY,QAAPD,OAAO,CAACF,KAAD,EAAQ;AACnB,UAAMY,KAAK,CAACnB,OAAO,CAACoB,cAAT,CAAL,CACDC,IADC,CACIC,GAAG,IAAIA,GAAG,CAACJ,IAAJ,EADX,EAEDG,IAFC,CAEIC,GAAG,IAAI,KAAKL,QAAL,CAAc;AAAEP,MAAAA,WAAW,EAAEY;AAAf,KAAd,CAFX,CAAN;AAGD;;AAcDC,EAAAA,kBAAkB,CAAEhB,KAAF,EAAS;AACvB,SAAKU,QAAL,CAAc,OAAO;AACjBC,MAAAA,IAAI,EAAEX,KADW;AAEjBO,MAAAA,WAAW,EAAE;AAFI,KAAP,CAAd;AAIH;;AAEDU,EAAAA,iBAAiB,GAAI;AACjB,UAAM;AAAEd,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;;AACA,QAAID,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,aAAO,IAAP;AACH;;AACD,wBACI;AAAA,gBACKL,WAAW,CAACM,IAAZ,CAAiBS,GAAjB,CAAsBC,IAAD,iBAAU;AAAI,QAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA,kBAAmDA;AAAnD;AAAA;AAAA;AAAA;AAAA,cAA/B;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAO,QAAA,KAAK,EAAGO,IAAf;AAAsB,QAAA,QAAQ,EAAE,KAAKb,aAArC;AAAoD,QAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKmB,iBAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvDyD","sourcesContent":["import React from 'react';\nimport \"./AutoCompleteText.css\";\n\nimport apiList from \"../lib/apiList\";\n\nexport default class AutoCompleteText extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state ={\n            suggestions : [],\n            text: '',\n            apiResponse: []\n        };\n    }\n  \n    async callAPI(value) {\n      await fetch(apiList.getFootballers)\n          .then(res => res.text())\n          .then(res => this.setState({ apiResponse: res }));\n    }\n\n    onTextChanged = (e) => {\n        const value = e.target.value;\n        this.callAPI(value);\n        const { apiResponse } = this.state;\n        console.log(apiResponse);\n        let suggestions = [];\n        if(value.length > 0){\n            suggestions = apiResponse.data;\n        }\n        this.setState(() => ({ suggestions, text: value }));\n    }\n\n    suggestionSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: []\n        }));\n    }\n\n    renderSuggestions () {\n        const { apiResponse } = this.state;\n        if( apiResponse.length === 0 ){\n            return null;\n        }\n        return (\n            <ul>\n                {apiResponse.data.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n            </ul>\n        )\n    }\n\n    render() {\n        const { text } = this.state;\n        return (\n            <div className='AutoCompleteText'>\n                <input value={ text } onChange={this.onTextChanged} type=\"text\" />\n                {this.renderSuggestions()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}